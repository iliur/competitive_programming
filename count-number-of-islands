class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:

        def dfs(r, c):
            grid[r][c] = "0"
            if (r > 0 and grid[r - 1][c] == "1"): # r-coord in range
                dfs(r - 1, c)
            if (r < len(grid) - 1 and grid[r + 1][c] == "1"):
                dfs(r + 1, c)
            if (c > 0 and grid[r][c - 1] == "1"):
                dfs(r, c - 1)
            if (c < len(grid[0]) - 1 and grid[r][c + 1] == "1"):
                dfs(r, c + 1)

        numIslands = 0

        for r in range(len(grid)): 
            for c in range(len(grid[0])):
                if (grid[r][c] == "1"):
                    print(r,c)
                    dfs(r, c)
                    numIslands += 1

        return numIslands
