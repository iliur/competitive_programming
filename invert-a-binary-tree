# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        
        

        head = root
        q = deque()
        if (root):
            q.append(root)

        while q:
            curr = q.popleft()
            if (curr.left):
                q.append(curr.left)
            if (curr.right):
                q.append(curr.right)

            tempLeft = curr.left
            curr.left = curr.right
            curr.right = tempLeft

        return head



            


